// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using campsleepway.connect;

namespace campsleepway.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("campsleepway.Models.Cabin", b =>
                {
                    b.Property<int>("CabinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cabacity")
                        .HasColumnType("int");

                    b.Property<string>("Cabiname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CabinId");

                    b.ToTable("Cabins");
                });

            modelBuilder.Entity("campsleepway.Models.Camper", b =>
                {
                    b.Property<int>("CamperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastnamme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Middelname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CamperId");

                    b.ToTable("Campers");
                });

            modelBuilder.Entity("campsleepway.Models.CamperNextOfKin", b =>
                {
                    b.Property<int>("CamperNextOfKinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CamperId")
                        .HasColumnType("int");

                    b.Property<string>("CamperNAme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextNAme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NextOfKinId")
                        .HasColumnType("int");

                    b.HasKey("CamperNextOfKinId");

                    b.HasIndex("CamperId");

                    b.HasIndex("NextOfKinId");

                    b.ToTable("CamperNextOfKin");
                });

            modelBuilder.Entity("campsleepway.Models.Counselor", b =>
                {
                    b.Property<int>("CounselorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CounselorId");

                    b.ToTable("Counselors");
                });

            modelBuilder.Entity("campsleepway.Models.Historik", b =>
                {
                    b.Property<int>("HistorikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CabinId")
                        .HasColumnType("int");

                    b.Property<int>("CamperId")
                        .HasColumnType("int");

                    b.Property<int>("CounselorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datestart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Datestop")
                        .HasColumnType("datetime2");

                    b.Property<string>("availablecounsler")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HistorikId");

                    b.HasIndex("CabinId");

                    b.HasIndex("CamperId");

                    b.HasIndex("CounselorId");

                    b.ToTable("Historiks");
                });

            modelBuilder.Entity("campsleepway.Models.NextOfKin", b =>
                {
                    b.Property<int>("NextOfKinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NextOfKinId");

                    b.ToTable("NextOfKins");
                });

            modelBuilder.Entity("campsleepway.Models.CamperNextOfKin", b =>
                {
                    b.HasOne("campsleepway.Models.Camper", "Camper")
                        .WithMany("CamperNextOfKin")
                        .HasForeignKey("CamperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("campsleepway.Models.NextOfKin", "NextOfKin")
                        .WithMany("CamperNextOfKin")
                        .HasForeignKey("NextOfKinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Camper");

                    b.Navigation("NextOfKin");
                });

            modelBuilder.Entity("campsleepway.Models.Historik", b =>
                {
                    b.HasOne("campsleepway.Models.Cabin", "Cabin")
                        .WithMany("Historiks")
                        .HasForeignKey("CabinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("campsleepway.Models.Camper", "Camper")
                        .WithMany("Historiks")
                        .HasForeignKey("CamperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("campsleepway.Models.Counselor", "Counselor")
                        .WithMany("CamperHistoriks")
                        .HasForeignKey("CounselorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cabin");

                    b.Navigation("Camper");

                    b.Navigation("Counselor");
                });

            modelBuilder.Entity("campsleepway.Models.Cabin", b =>
                {
                    b.Navigation("Historiks");
                });

            modelBuilder.Entity("campsleepway.Models.Camper", b =>
                {
                    b.Navigation("CamperNextOfKin");

                    b.Navigation("Historiks");
                });

            modelBuilder.Entity("campsleepway.Models.Counselor", b =>
                {
                    b.Navigation("CamperHistoriks");
                });

            modelBuilder.Entity("campsleepway.Models.NextOfKin", b =>
                {
                    b.Navigation("CamperNextOfKin");
                });
#pragma warning restore 612, 618
        }
    }
}
